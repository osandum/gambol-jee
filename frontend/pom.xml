<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.sandum.gambol</groupId>
    <artifactId>base</artifactId>
    <version>0.2-SNAPSHOT</version>
  </parent>

  <artifactId>frontend</artifactId>
  <packaging>war</packaging>

  <name>Frontend web</name>
  <description>
    Testing the Wildfly AS 11 on OpenShift 3
  </description>

  <dependencies>
    <dependency>
      <groupId>org.mnode.ical4j</groupId>
      <artifactId>ical4j</artifactId>
      <version>3.0.11</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>model</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>gambol</groupId>
      <artifactId>gambol-frontend-base</artifactId>
      <version>0.2-SNAPSHOT</version>
      <type>war</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>8.0.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.28</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>gambol</finalName>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.3.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>

          <overlays>
            <overlay>
              <groupId>gambol</groupId>
              <artifactId>gambol-frontend-base</artifactId>
              <excludes>
                <exclude>WEB-INF/classes/images/sampleimage-dependency.jpg</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>

        <executions>
          <!--
           ! Fetch the PostgreSQL JDBC driver jar into ./target/patches.
           ! From there, the docker build will place it in /tmp and execute
           ! wildfly-conf.cli to patch it from there into the Wildfly image
           ! -->
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.postgresql</groupId>
                  <artifactId>postgresql</artifactId>
                  <outputDirectory>${project.build.directory}/patches</outputDirectory>
                  <destFileName>postgresql-jdbc.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>

      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>4.2.0.Final</version>
      </plugin>

      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <container>
            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
            <entrypoint>INHERIT</entrypoint>
            <format>Docker</format>
          </container>
          <to>
            <image>sandum.net:5000/osa/myimage</image>
            <tags>
              <tag>latest</tag>
            </tags>
          </to>
        </configuration>
      </plugin>

    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
      <!-- Use this profile for any OpenShift specific customization your app will need. -->
      <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
      <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
      <id>openshift</id>
      <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.3</version>
            <configuration>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <outputDirectory>target</outputDirectory>
              <warName>ROOT</warName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dev</id>
      <properties>
        <flyway.url>jdbc:postgresql://casa/as10</flyway.url>
        <flyway.user>as10</flyway.user>
        <flyway.password>as10</flyway.password>
        <!-- flyway.schemas>BR_ADM</flyway.schemas -->
      </properties>
    </profile>
  </profiles>


  <repositories>
    <repository>
      <id>osandum-github-release</id>
      <name>Sandum.Net repo on github</name>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>https://raw.github.com/osandum/mvn-repo/releases</url>
    </repository>
    <repository>
      <id>osandum-github-snapshot</id>
      <name>Sandum.Net repo on github</name>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <url>https://raw.github.com/osandum/mvn-repo/snapshots</url>
    </repository>
  </repositories>

</project>
